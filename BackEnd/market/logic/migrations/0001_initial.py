# Generated by Django 3.2.9 on 2021-11-13 17:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import logic.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BotData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=20, unique=True, verbose_name='Идентификатор в телеграмме')),
            ],
            options={
                'verbose_name': 'Данные бота',
                'verbose_name_plural': 'Данные ботов',
            },
        ),
        migrations.CreateModel(
            name='Farmer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Рекламное название фермера')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Профиль фермера')),
            ],
            options={
                'verbose_name': 'Статус фермера',
                'verbose_name_plural': 'Статус фермеров',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название продукта')),
                ('slug', models.SlugField(max_length=20, unique=True, verbose_name='Ссылка в браузере')),
                ('quantity', models.FloatField(verbose_name='Количество товара на складе')),
                ('stock_multipler', models.FloatField(default=0, verbose_name='Процент скидки по акции')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('description', models.TextField(max_length=1200, verbose_name='Описание категории')),
                ('image', models.ImageField(upload_to='media/prod_cat/')),
                ('stock_multipler', models.FloatField(default=0, verbose_name='Процент скидки по акции')),
            ],
            options={
                'verbose_name': 'Категория продукта',
                'verbose_name_plural': 'Категории продуктов',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Навание размера')),
            ],
            options={
                'verbose_name': 'Размер продукта',
                'verbose_name_plural': 'Размеры продуктов',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название статуса')),
            ],
            options={
                'verbose_name': 'Статус заказа',
                'verbose_name_plural': 'Статусы заказа',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название акции')),
                ('text', models.TextField(max_length=1200, verbose_name='Тект новости')),
                ('published', models.BooleanField(default=False, verbose_name='Статус публикации')),
                ('publication_date', models.DateTimeField(verbose_name='Дата публикации')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания новости')),
            ],
            options={
                'verbose_name': 'Акция',
                'verbose_name_plural': 'Акции',
            },
        ),
        migrations.CreateModel(
            name='Transport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название транспорта')),
                ('weight', models.IntegerField(verbose_name='Грузоподъемность')),
            ],
            options={
                'verbose_name': 'Транспорт',
                'verbose_name_plural': 'Транспорт',
            },
        ),
        migrations.CreateModel(
            name='Unitsmeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название единицы измерения')),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерения',
            },
        ),
        migrations.CreateModel(
            name='Sort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название единицы измерения')),
                ('stock_multipler', models.FloatField(default=0, verbose_name='Процент скидки по акции')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logic.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Сорт продукта',
                'verbose_name_plural': 'Сорты продуктов',
                'unique_together': {('name', 'product')},
            },
        ),
        migrations.CreateModel(
            name='Properties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.DateField(blank=True, null=True, verbose_name='Год урожая')),
                ('price', models.FloatField(verbose_name='Цена за единицу товара')),
                ('size', models.FloatField(verbose_name=logic.models.Size)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logic.farmer', verbose_name='Производитель')),
                ('product_sort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logic.sort', verbose_name='Продукт-сорт')),
            ],
            options={
                'verbose_name': 'Характеристика',
                'verbose_name_plural': 'Характеристики',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logic.productcategory', verbose_name='Катогория продукта'),
        ),
        migrations.AddField(
            model_name='product',
            name='um',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='logic.unitsmeasure', verbose_name='Единицы измерения'),
        ),
        migrations.CreateModel(
            name='OrderPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(verbose_name='Количество')),
                ('price', models.FloatField(verbose_name='Цена в момент покупки')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='logic.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Часть заказа',
                'verbose_name_plural': 'Части заказов',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Дата заказа')),
                ('part', models.ManyToManyField(to='logic.OrderPart', verbose_name='Часть заказа')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='logic.status', verbose_name='Статус заказа')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(verbose_name='Количество товара на складе')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logic.product', verbose_name='Продукт')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
            },
        ),
    ]
